<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABopJREFUeF7tnWtvFDcUQPuDQIBaEA8BKiBAgCi0BYWWIkA8WqgAFVooIQmbsCmJ
        ACW/2OhEsnBXl92Z7Ngz1/d+OF+yOzsPn/HjXtv5Zn28HRy7uADGcQGM4wIYxwUwjgtgHBfAOC6AcVwA
        47gAxnEBjOMCGMcFMI4LYBwXwDgugHFcAOO4AMZxAYzjAhjHBTCOC2AcF8A4LoBxXADjuADGcQGM4wIY
        xwUwTvUCjN5uhQf3N8KNhXG4fHktnD07CufOjcKVH9Z2/vboj82wOtoSj7VAtQJQ6GdOj8Leva/Dnj3T
        2bdvMZw/Pwp/Pt4Uf6tmqhPgyZPNcPz4sljQTUCav198FH+7RqoRYPxuO1y9siYWaluoNW7dWhfPUxtV
        CEA7z5srFeY80GdALOmctaBeAAro1PcrYgF2wcWLq+J5a0G9ALylUsF1CaMF6dw1oFqA+/feiwWWg6dP
        P4jXoB21AqytboWDB5fEwsoBzYx0HdpRK8AvN8ZiQeWEoJF0LZpRK8ChQ+Xe/ggjDelaNKNSgGfPPogF
        lBsihrWFjVUKsLCwLhZQCQgxS9ekFZUCnD71ViycEly7VteQUKUAR4/uPtY/L5cu1RUYUinAgQOLYuGU
        gNpHuiatqBSgSYo3Fy7AADh8uPwQMMK8AematKJSgJzJn1mQcpauSSsqBaAjJhVOCX67Wdc8AZUCPHyw
        IRZOCf599Um8Jq2oFIBoHFE5qYBywvBTuh7NqBQAmKghFVJOSEBJ16IZtQJQFZccDpJ6rnH6uFoB4Oef
        yqWEa50kqloA3sgSYWGCP7VODlUtANAU5AwNE3RaXq535ZB6AYD5evv3dy8B7f6rl3UvEqlCAHj5z8dO
        Q8QnT66EpTd1jfklqhEAKDCmic8zOiC+QM6fSafSOWqjKgEi1AYkbdqIQMEjj4W3PqVKASJxafiFC6vh
        2LHl8N23X/oJtO8sIiWvYHmJeNUCOLNRKQBDP9Kyi6/LVNfUJHQKCQbV1jdQJcBkJ+/EiZUiAZo070DT
        wZK0WgJDKgTgrbt+fSxmAHNP0LhzR15/eOTIUhVTxAcvALt10IGTCiGSK07/+NHmzLQztYPmDuRgBaCK
        ZVl206EcvfkuC4JzS+eRIAD14rnO1cODFICC3M28P2qKeUO3dPjYSUz6/Wkg6s1f9WUMByfAm8VPc2X4
        KAiq5ed/tXsjEefHq+/mzilIK4gZtdBMcV1kFoHYBBNMCFpNfr8kgxKA9r7LNf+MEujEsf0bBZz23BlC
        sqPY3bvvd/YNlI5vy+SqIc5H53VWM8aehX31IwYjACt+c2T0Jsm1rJzmJy1E3noElL4rwaiij37EIATg
        7ezyzS8N4lLg8X6oXSSZmbfAHgPUOGlYOkJN0bbpmpfeBSC408dmD11CNZ/eE218+jk5B6lgEX+ys0v/
        p2S0sVcBmGnT50rfLuCtpeMa7+n27f/+9zmRy2kFGvsJ6TEll6D3JgA3vpvh1tCgnY/3RB8grfqbvs08
        C3IN8TikSpuUnPQmQJtAy5ChBx/viSFg+lmbreVoDtJjS81C7kUAhl+zhkZDhiqbhBCkG0unVTn317Yt
        T/tCxAyk73RNcQFoL6UesCa+9manu5bS8ZO+Mw1mMcXjS+1DUFyA9Ca18jUB0g2rd7OVTCpQlQIQkYs3
        qJlUAHrsJIMgzRzSGYx/b0rageS30s/S59glxQSgPSTaFW9QM6kA6Vubk/RZdkkxAfrY2jUXLkBLiPbN
        mlihCRegJbWM+SMuQAto+/vc1y8HLkALiGhJN6QZF6AhxLgZwkg3pJmmAhAMovlrwqz4SPpcuySrAJOx
        8VpoKgCfpc9jGrP+/Y10TBdkFSBdUFETLkADSI3WNPRLaSoAkz1i0mgWZBWl34ikz7ZLsgnATUk3UgPe
        CWxAjv/kORRcgAYwy5dqTXvqV8IFaAFDQSaAIIP2yZ8RF2AOmPvOEiry3Vo7iS5ARxAm5mGSKWSCqJaQ
        sQuQEebYsZyLJoOZskOUwgUoDOlkHjpz7lnASW1BiLn0xFLOx3nTRR4uQM+wnJulWAjy+8ONncWexNbZ
        OSRdjdsE4vHUPByPbPxjCn6XOfqcRzo/i1s4f26kc3eBegGc+XABjOMCGMcFMI4LYBwXwDgugHFcAOO4
        AMZxAYzjAhjHBTCOC2AcF8A4LoBxXADjuADGcQGM4wIYxwUwjgtgHBfAOC6AcVwA47gAxnEBjOMCGMcF
        MI4LYJrt8BnXUNVhLEkoQQAAAABJRU5ErkJggg==
</value>
  </data>
</root>